{"version":3,"sources":["components/FormControls/FormControls.jsx","components/Navbar/Friends/Friends.module.css","assets/images/images.jfif","assets/images/Pulse-1s-200px.svg","assets/images/haha.jpg","components/Navbar/Navbar.module.css","serviceWorker.js","DAL/api.js","Redux/profileReducer.js","components/Navbar/Friends/Friends.jsx","Redux/sitebarReducer.js","Redux/usersReducer.js","Redux/authReducer.js","Redux/appReducer.js","Redux/redux-store.js","components/Navbar/Navbar.jsx","components/Users/Users.js","components/preloader/preloader.jsx","Redux/usersSelectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/FormLogin.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","hoc/withSuspense.js","index.js","utillits/validators/validators.js","components/FormControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Users/users.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Header/Header.module.css","Redux/dialogsReducer.js"],"names":["FormConrol","input","meta","props","child","hasError","touched","error","className","styles","formController","children","Textarea","restProps","Input","createField","placeholder","name","validators","component","text","validate","module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","resultCode","delete","profileAPI","status","put","file","formData","FormData","append","profile","loginAPI","email","password","rememberMe","captcha","securityAPI","initialState","posts","id","message","likesCount","newPostText","setUserProfileSuccess","type","setStatus","setUserProfile","dispatch","a","profileReducer","state","action","newPost","newPostBody","photos","filter","p","postId","Friends","s","friends","alt","src","sidebarReducer","map","f","users","totalUsersCount","isFetching","followingInProgress","followingProgress","setCurrentPageSuccess","setToggleIsFetching","usersReducer","user","userID","followed","count","isAuth","login","captchaURL","authReducer","payload","setAuthUsersData","setCaptchaUrl","getAuthUsersData","getCaptchaURL","errorMessage","messages","length","stopSubmit","_error","url","initialized","appReducer","reducers","combineReducers","dialogsPage","dialogsReducer","profilePage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","Navbar","nav","item","activeClassName","active","to","Users","pages","i","push","selectedPAge","onClick","e","onPageChanged","key","small","userPhoto","photo","disabled","some","unfollow","follow","Preloader","preloader","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","setUsers","this","totalUsersCOunt","totalUserCount","unFollow","React","Component","connect","items","totalCount","ProfileStatusWithHooks","console","log","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataReduxForm","reduxForm","handleSubmit","onSubmit","style","formSummaryError","Object","keys","contacts","contact","ProfileData","goToEditMode","isOwner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","avatar","descriptionBlock","large","usePhoto","target","files","savePhoto","initialValues","saveProfile","Post","post_img","like","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","postsBlock","AddMessageReduxForm","values","addPost","Field","required","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","params","ownUserId","history","getUserStatus","refreshProfile","prevProps","prevState","snapshot","getState","Promise","reject","withRouter","Header","header","loginBlock","logout","HeaderContainer","LoginReduxForm","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","MaxLength","inititalState","dialogs","addNewMessageBodyActionCreator","newMessageBody","newMessage"],"mappings":"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","file":"static/js/main.d3b799ee.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormConrol = ({input, meta , child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.formController : \"\"}>\r\n            <div>\r\n                {props.children}\r\n\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta , child, ...restProps} = props;\r\n    return <FormConrol {...props}> <textarea {...input} {...restProps}/> </FormConrol>\r\n};\r\nexport const Input = (props) => {\r\n    const {input, meta , child, ...restProps} = props;\r\n    return <FormConrol {...props}> <input {...input} {...restProps}/> </FormConrol>\r\n};\r\nexport const createField = (placeholder, name, validators, component, props = {}, text=\"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators} component={component}\r\n                   {...props}/>{text}\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1n_fF\"};","module.exports = __webpack_public_path__ + \"static/media/images.904467c3.jfif\";","module.exports = __webpack_public_path__ + \"static/media/Pulse-1s-200px.cf5df366.svg\";","module.exports = __webpack_public_path__ + \"static/media/haha.0f81fe99.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__10lsR\",\"item\":\"Navbar_item__3xH-R\",\"active\":\"Navbar_active__2iq8d\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance =  axios.create({\r\n    withCredentials : true,\r\n    baseURL : (\"https://social-network.samuraijs.com/api/1.0/\"),\r\n    headers : {\r\n        \"API-KEY\":\"24afe4d5-e911-48f2-ab38-6aea088744f2\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage,pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n               return response.data;\r\n            });\r\n    },\r\n    setFollow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode;\r\n            })\r\n    },\r\n    setUnfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode;\r\n            })\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getUserProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response=> {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status : status})\r\n    },\r\n    savePhoto(file){\r\n        let formData = new FormData();\r\n        formData.append(\"image\" , file)\r\n        return instance.put(`profile/photo` , formData , {\r\n            headers : {\r\n                \"Content-type\" : \"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    }\r\n};\r\nexport const loginAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false , captcha=null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};","import {profileAPI} from \"../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\";\r\n\r\nlet initialState = {\r\n    posts : [\r\n        // {id: 1 , message : \"Hi\" , likesCount : 12},\r\n        // {id: 2 , message : \"Hello\" , likesCount : 14},\r\n        // {id: 3 , message : \"It's my first post!\" , likesCount : 15},\r\n        // {id: 4 , message : \"What do you doing?\" , likesCount : 13},\r\n        {id: 5 , message : \"How much is the fish?\" , likesCount : 11}\r\n    ],\r\n    newPostText : \"heyhey\",\r\n    profile : null,\r\n    status : \"\"\r\n};\r\n\r\nconst  profileReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile : action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status : action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state, profile : {...state.profile, photos : action.photos}\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts : state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport const  deletePost = (postId) => ({type : DELETE_POST, postId});\r\nexport const addPostActionCreator = (newPostBody) => ({type : ADD_POST, newPostBody});\r\nconst setUserProfileSuccess = (profile)=> ({type : SET_USER_PROFILE, profile});\r\nconst setStatus = (status) => ({type : SET_STATUS,status});\r\nconst savePhotoSuccess = (photos) => ({type : SAVE_PHOTO,photos});\r\n\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) =>{\r\n    let response = await profileAPI.updateStatus(status);\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setStatus(status));\r\n            }\r\n};\r\nexport const setUserProfile = (userId) => async (dispatch) => {\r\n    let profile = await profileAPI.getUserProfile(userId);\r\n            dispatch(setUserProfileSuccess(profile));\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setUserProfile(userId));\r\n    }else{\r\n        dispatch(stopSubmit(\"edit-profile\", {_error :response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\nexport default profileReducer;\r\n\r\n","import React from \"react\"\r\nimport s from \"./Friends.module.css\"\r\nconst Friends = (props) => {\r\n    return <div className={s.friends}>\r\n        <img alt=\"\" src={props.src} />\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default Friends","import Friends from \"../components/Navbar/Friends/Friends\";\r\nimport React from \"react\";\r\n\r\nlet initialState ={\r\n    friends : [\r\n        {id : 1 , src : \"https://cdn.iconscout.com/icon/premium/png-256-thumb/marvel-1502922-1273137.png\"},\r\n        {id : 1 , src : \"https://66.media.tumblr.com/2baea900172949be0a2c460cfe48fff8/tumblr_p9d3rzjswE1wmrvkdo7_250.png\"},\r\n        {id : 1 , src : \"https://66.media.tumblr.com/b6fdaeba44abe187c44e7b07fc896cbf/tumblr_p9d3rzjswE1wmrvkdo2_r1_250.png\"}\r\n    ]\r\n};\r\nconst FRIENDS_LIST = \"FRIENDS_LIST\";\r\nconst  sidebarReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case FRIENDS_LIST:\r\n            state.friends.map(f => <Friends src={f.src}/>);\r\n            return state;\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport const friendsListActionCreator = () => ({type : FRIENDS_LIST});\r\n\r\nexport default  sidebarReducer;","import {usersAPI} from \"../DAL/api\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FOLLOWING\";\r\n\r\nlet initialState = {\r\n    users : [],\r\n    pageSize : 5,\r\n    totalUsersCount : 0,\r\n    currentPage : 1,\r\n    isFetching : true,\r\n    followingInProgress : []\r\n};\r\n\r\nconst  usersReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state,\r\n                users: state.users.map(user=>{\r\n                    if(user.id === action.userID){\r\n                        return {\r\n                            ...user, followed : true\r\n                    }\r\n                    }\r\n                    return user;\r\n                } )};\r\n\r\n        case UNFOLLOW:\r\n            return {...state,\r\n                    users: state.users.map(user=>{\r\n                        if(user.id === action.userID){\r\n                            return {\r\n                                ...user, followed : false\r\n                            }\r\n                        }\r\n                        return user;\r\n                    } )};\r\n        case SET_USERS:\r\n            return {...state, users : action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress , action.userId]\r\n                    : state.followingInProgress.filter(id=>id !== action.userId)};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst followingProgress = (isFetching, userId) => ({type:TOGGLE_IS_FOLLOWING, isFetching, userId});\r\nconst followSuccess = (userID) => ({type : FOLLOW,  userID});\r\nconst unFollowSuccess = (userID) => ({type : UNFOLLOW, userID});\r\nconst setUsersSuccess = (users) => ({type : SET_USERS , users});\r\nconst setCurrentPageSuccess = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nconst setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count : totalUsersCount});\r\nconst setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(followingProgress(true, userId));\r\n    let response = await usersAPI.setFollow(userId);\r\n            if(response===0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(followingProgress(false, userId));\r\n};\r\nexport const unFollow = (userId) => async (dispatch) => {\r\n    dispatch(followingProgress(true, userId));\r\n    let response = await usersAPI.setUnfollow(userId);\r\n            if(response===0) {\r\n                dispatch(unFollowSuccess(userId));\r\n            }\r\n            dispatch(followingProgress(false, userId));\r\n};\r\nexport const setUsers =(currentPage, pageSize)=> async (dispatch) => {\r\n    dispatch(setToggleIsFetching(true));\r\n    debugger;\r\n    let data = await usersAPI.getUsers(currentPage , pageSize);\r\n            dispatch(setToggleIsFetching(false));\r\n            dispatch(setCurrentPageSuccess(currentPage));\r\n            dispatch(setUsersSuccess(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n};\r\nexport default usersReducer;\r\n\r\n","\r\nimport {loginAPI, securityAPI} from \"../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USERS_DATA = \"SET_USERS_DATA\";\r\nconst SET_CAPTCHA_URL = \"SET_CAPTCHA_URL\";\r\n\r\n\r\nlet initialState ={\r\n    isAuth: false,\r\n    id : null,\r\n    login : null,\r\n    email: null,\r\n    captchaURL : null\r\n};\r\nconst  authReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case SET_CAPTCHA_URL:\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport default  authReducer;\r\nconst setAuthUsersData = (id, email, login, isAuth) => ({type : SET_USERS_DATA,payload: { id ,email ,login, isAuth}});\r\nconst setCaptchaUrl = (captchaURL) => ({type : SET_CAPTCHA_URL , payload : {captchaURL}});\r\n\r\n\r\nexport const getAuthUsersData = () => async (dispatch) => {\r\n    let response = await loginAPI.me();\r\n            if(response.data.resultCode === 0){\r\n                let {id , email , login} = response.data.data;\r\n                dispatch(setAuthUsersData(id , email , login, true))\r\n            }\r\n};\r\nexport const login = (email, password, rememberMe , captcha) => async (dispatch) => {\r\n    let response = await loginAPI.login(email, password, rememberMe , captcha);\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUsersData())\r\n\r\n            }else{\r\n                if(response.data.resultCode === 10){\r\n                    debugger;\r\n                    dispatch(getCaptchaURL());\r\n                }\r\n                let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"check the correctness of the entered data\"\r\n                dispatch(stopSubmit(\"Login\", {_error : errorMessage }));\r\n            }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await loginAPI.logout();\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setAuthUsersData(null,null,null,false))\r\n            }\r\n};\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaUrl(captchaURL));\r\n};","\r\nimport {getAuthUsersData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState ={\r\n    initialized : false\r\n};\r\nconst  appReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport default  appReducer;\r\nconst initializedSuccess = () => ({type : SET_INITIALIZED });\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUsersData());\r\n    Promise.all([promise]).then( ()=>{\r\n            dispatch(initializedSuccess());\r\n    });\r\n};\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sitebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\nlet reducers = combineReducers({\r\n    dialogsPage :  dialogsReducer,\r\n    profilePage: profileReducer ,\r\n    sidebar : sidebarReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)));\r\nwindow.__store__  = store;\r\nexport default store;","import React from 'react'\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n    //Тут можно получить кастомых друзей\r\n\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/dialogs\">Dialogs</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/news\">News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/music\">Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/settings\">Settings</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport userPhoto from \"../../assets/images/images.jfif\";\r\nimport s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Users(props) {\r\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && s.selectedPAge}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(user => <div key={user.id}>\r\n                <span>\r\n                    <NavLink to={`profile/`+user.id}>\r\n                        <div>\r\n                            <img alt=\"logo\" src={user.photos.small != null ? user.photos.small : userPhoto} className={s.photo}/>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => {\r\n                                props.follow(user.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.city\"}</div>\r\n                        <div>{\"user.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </div>)\r\n}\r\n\r\nexport default Users;","import preloader from \"../../assets/images/Pulse-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img alt=\"\" src={preloader}/>\r\n    </div>\r\n}\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector (getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u=>true);\r\n});\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setUsers, unFollow, follow\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setUsers(this.props.currentPage,this.props.pageSize);\r\n\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCOunt={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unFollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n// let authRedirectComponent = withAuthRedirect(UsersContainer);\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unFollow, setUsers\r\n    })\r\n)(UsersContainer);","import React , {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    console.log(props);\r\n    let [editMode , setEditMode] = useState( false);\r\n    let [status , setStatus] = useState(props.status);\r\n    useEffect( ()=>{\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n            <div>\r\n                <div>\r\n                    {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} >{props.status || `----`}  </span>\r\n                    </div>\r\n                    }\r\n                    {editMode &&\r\n                        <div>\r\n                            <input onChange={onStatusChange} autoFocus={true}\r\n                                   value={status} onBlur={deactivateEditMode}/>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport {Contact} from \"./ProfileInfo\";\r\nimport {createField, Input ,Textarea} from \"../../FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../FormControls/FormControls.module.css\"\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n                <b> Full Name </b>: {createField(\"Full name\",\"fullname\",[], Input)}\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b> About me :</b>\r\n                {createField(\"About me\",\"aboutMe\",[], Textarea)}\r\n\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob : </b>\r\n                {createField(\"\",\"lookingForAJob\",[], Input, {type : \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b> My Professional skills :</b>\r\n                {createField(\"My Professional skills\",\"lookingForAJobDescription\",[], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts :</b> {Object.keys(profile.contacts).map( key=>{\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}</b> {createField(key,\"contacts.\" + key,[], Input)}\r\n                    {console.log(key)}\r\n                </div>\r\n            }) }\r\n            </div>\r\n            <div>\r\n                <button>save changes</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({form : \"edit-profile\"})(ProfileDataForm);\r\nexport default ProfileDataReduxForm;","import React , {useState} from 'react'\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usePhoto from \"../../../assets/images/haha.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode , setEditMode] = useState( false);\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    };\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n    const onSubmit = (formData) => {\r\n         props.saveProfile(formData).then(\r\n             ()=>{\r\n                 setEditMode(false);\r\n             }\r\n         )\r\n    };\r\n        return(\r\n            <div>\r\n                <div className={s.avatar}>\r\n                    <img alt=\"\" src=\"https://esquire.kz/wp-content/uploads/2018/04/3367434-aiw_master-1-960x540.jpg\" />\r\n                </div>\r\n                <div className={s.descriptionBlock}>\r\n                    <img alt=\"\" src={props.profile.photos.large || usePhoto}/>\r\n                    {props.isOwner && <input onChange={onMainPhotoSelected} type=\"file\"/> }\r\n                    <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                    {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile }/> : <ProfileData isOwner={props.isOwner} goToEditMode={ ()=> {setEditMode(true)}} profile={props.profile }/> }\r\n\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n}\r\nconst ProfileData = ({profile, goToEditMode , isOwner}) => {\r\n    return (\r\n        <div>\r\n            {isOwner &&  <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div> }\r\n\r\n            <div>\r\n                <b> Full Name :</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b> About me :</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob : </b> {profile.lookingForAJob?\"Yes\":\"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b> My Professional skills :</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Contacts :</b> {Object.keys(profile.contacts).map( key=>{\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            }) }\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle} :</b> {contactValue}\r\n    </div>\r\n};\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt=\"\" className={s.post_img} src=\"https://www.freeiconspng.com/uploads/shield-marvel-icon-5.jpg\" />\r\n            { props.message }\r\n            <div>\r\n                <span>Like: { props.like }</span>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utillits/validators/validators\";\r\nimport {Textarea} from \"../../FormControls/FormControls\";\r\n\r\n\r\nlet maxLength10 = maxLengthCreator(50);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id } message={p.message} like={p.likesCount}/>);\r\n\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div>\r\n                <AddMessageReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>)\r\n});\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required,maxLength10]} name=\"newPostBody\" placeholder=\"new Post\"/>\r\n            <button>add Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form : \"addPostForm\"})(AddMessageForm);\r\nexport default MyPosts;","\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        posts : state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost : (newPostBody)=>{\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return(\r\n        <div >\r\n            <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} savePhoto={props.savePhoto} status={props.status} updateUserStatus={props.updateUserStatus} profile={props.profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserStatus, savePhoto, saveProfile, setUserProfile, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.ownUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        console.log(userId);\r\n        this.props.setUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props} profile={this.props.profile}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        status={this.props.status} savePhoto={this.props.savePhoto}\r\n                        updateUserStatus={this.props.updateUserStatus}/>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n    ownUserId : state.auth.id,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps , {setUserProfile , saveProfile, getUserStatus, updateUserStatus, savePhoto }),\r\n    withRouter\r\n)(ProfileContainer) ;"," import React from 'react'\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={s.header}>\r\n        <img alt=\"\" src=\"https://img2.freepng.es/20180331/aye/kisspng-iron-man-captain-america-logo-marvel-cinematic-uni-avengers-5abf62fa369331.0376927015224921542236.jpg\"></img>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>)\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUsersData, logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n       this.props.getAuthUsersData();\r\n    }\r\n    render() {\r\n\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth : state.auth.isAuth,\r\n    login : state.auth.login\r\n\r\n});\r\nexport default connect(mapStateToProps , {logout,getAuthUsersData\r\n})(HeaderContainer);","import React from \"react\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../FormControls/FormControls\";\r\nimport {required} from \"../../utillits/validators/validators\";\r\nimport styles from \"../FormControls/FormControls.module.css\"\r\n\r\nconst FormLogin = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={`email`} placeholder={\"Email\"} type={\"text\"} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={`password`} placeholder={\"Password\"} type={\"password\"} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={`rememberMe`} type={\"checkbox\"} component={Input}/>Remember me\r\n                {props.captchaURL && <img src={props.captchaURL}/>}\r\n                {props.captchaURL && createField(\"symbols from image\", \"captcha\", [required], Input, {})}\r\n                {props.error&&<div className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>}\r\n\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({form : \"Login\"})(FormLogin);","import React from \"react\"\r\nimport  {LoginReduxForm} from \"./FormLogin\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe,formData.captcha);\r\n\r\n    };\r\n    if(props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return(\r\n\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth : state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL\r\n});\r\nexport default  connect(mapStateToProps, {login} )(Login);","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Login from \"./Login\";\r\nimport {login} from \"../../Redux/authReducer\";\r\n\r\nconst LoginContainer  = (props)=>{\r\n\r\n        return <Login login={props.login}/>;\r\n};\r\nlet mapStateToProps = (state)=>({\r\n    login : state.auth.login\r\n});\r\nexport default connect(mapStateToProps,{login})(LoginContainer);\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Route} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(()=> import(`./components/Dialogs/DialogsContainer`));\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar state={this.props.state}\r\n                        dispatch={this.props.dispatch}/>\r\n                <div className=\"app-wrapper-content\">\r\n                    <Route path=\"/dialogs\"\r\n                           render={withSuspense(DialogsContainer) }/>\r\n                    <Route path=\"/profile/:userId?\"\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/users\"\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\"\r\n                           render={() => <LoginContainer/>}/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized : state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps , {initializeApp })(App);\r\n","import React from \"react\";\r\nimport Preloader from \"../components/preloader/preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) =>{\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n};","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./Redux/redux-store\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>, document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();","export const required = value =>{\r\n    if(value)return undefined;\r\n    return \"Field is required\";\r\n};\r\nexport const maxLengthCreator = (MaxLength) => (value)=>{\r\n    if(value.length>MaxLength) return `max length is ${MaxLength} symbols`;\r\n    return undefined;\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formController\":\"FormControls_formController__2nejx\",\"formSummaryError\":\"FormControls_formSummaryError__1EQe4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1r69B\",\"avatar\":\"ProfileInfo_avatar__1jmXn\",\"contact\":\"ProfileInfo_contact__2I1l5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__AIauk\",\"selectedPAge\":\"users_selectedPAge__EfTYy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3H1jN\",\"posts\":\"MyPosts_posts__rGfw3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__26OKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1PU1-\",\"loginBlock\":\"Header_loginBlock__RpTea\"};","const ADD_NEW_MESSAGE_BODY = \"ADD_NEW_MESSAGE_BODY\";\r\nlet inititalState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Maksim\"},\r\n        {id: 2, name: \"Maks\"},\r\n        {id: 3, name: \"Masha\"},\r\n        {id: 4, name: \"Yo\"},\r\n        {id: 5, name: \"Egor\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"Hello\"},\r\n        {id: 3, message: \"How are you?\"},\r\n        {id: 4, message: \"What are you doing?\"},\r\n        {id: 5, message: \"How much is the fish?\"}\r\n\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = inititalState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_MESSAGE_BODY:\r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.newMessageBody\r\n            };\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addNewMessageBodyActionCreator = (newMessageBody) => ({type: ADD_NEW_MESSAGE_BODY, newMessageBody});\r\n\r\nexport default dialogsReducer;\r\n"],"sourceRoot":""}