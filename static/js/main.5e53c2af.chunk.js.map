{"version":3,"sources":["Redux/dialogsReducer.js","components/FormControls/FormControls.jsx","components/Navbar/Friends/Friends.module.css","assets/images/images.jfif","assets/images/Pulse-1s-200px.svg","assets/images/haha.jpg","serviceWorker.js","DAL/api.js","Redux/profileReducer.js","components/Navbar/Friends/Friends.jsx","Redux/sitebarReducer.js","Redux/usersReducer.js","Redux/authReducer.js","Redux/appReducer.js","Redux/redux-store.js","components/Navbar/Navbar.jsx","components/Users/Users.js","components/preloader/preloader.jsx","Redux/usersSelectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/FormLogin.jsx","components/Login/Login.jsx","components/Login/LoginContainer.jsx","App.js","hoc/withSuspense.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Navbar/Navbar.module.css","utillits/validators/validators.js","components/FormControls/FormControls.module.css","components/Header/Header.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Users/users.module.css"],"names":["inititalState","dialogs","id","name","messages","message","addNewMessageBodyActionCreator","newMessageBody","type","dialogsReducer","state","action","newMessage","FormConrol","input","meta","props","child","hasError","touched","error","className","styles","formController","children","Textarea","restProps","Input","createField","placeholder","validators","component","text","validate","module","exports","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","then","response","data","userId","post","resultCode","delete","profileAPI","status","put","file","formData","FormData","append","profile","loginAPI","email","password","rememberMe","captcha","securityAPI","initialState","posts","likesCount","newPostText","setUserProfileSuccess","setStatus","setUserProfile","dispatch","a","profileReducer","newPost","newPostBody","photos","filter","p","postId","Friends","s","friends","alt","src","sidebarReducer","map","f","users","totalUsersCount","isFetching","followingInProgress","followingProgress","setCurrentPageSuccess","setToggleIsFetching","usersReducer","user","userID","followed","count","isAuth","login","captchaURL","authReducer","payload","setAuthUsersData","setCaptchaUrl","getAuthUsersData","getCaptchaURL","errorMessage","length","stopSubmit","_error","url","initialized","appReducer","reducers","combineReducers","dialogsPage","profilePage","sidebar","usersPage","auth","app","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","__store__","Navbar","nav","item","activeClassName","active","to","Users","pages","i","push","selectedPAge","onClick","e","onPageChanged","key","small","userPhoto","photo","disabled","some","unfollow","follow","Preloader","preloader","getUsers","createSelector","u","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","pageNumber","setUsers","this","totalUsersCOunt","totalUserCount","unFollow","React","Component","connect","items","totalCount","ProfileStatusWithHooks","console","log","useState","editMode","setEditMode","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","updateUserStatus","ProfileDataReduxForm","reduxForm","handleSubmit","onSubmit","style","formSummaryError","Object","keys","contacts","contact","ProfileData","goToEditMode","isOwner","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contact","ProfileInfo","descriptionBlock","profilePhoto","large","usePhoto","changeAvatar","target","files","savePhoto","profileInfo","initialValues","saveProfile","Post","post_img","like","maxLength10","maxLengthCreator","MyPosts","memo","postsElements","postsBlock","AddMessageReduxForm","values","addPost","Field","required","formBtn","MyPostsContainer","addPostActionCreator","Profile","mainProfile","ProfileContainer","params","ownUserId","history","getUserStatus","refreshProfile","prevProps","prevState","snapshot","getState","Promise","reject","withRouter","Header","header","left","loginBlock","logout","Button","variant","color","href","HeaderContainer","LoginReduxForm","DialogsContainer","lazy","App","promiseRejectionEvent","alert","initializeApp","addEventListener","catchAllUnhandledError","removeEventListener","exact","path","render","Suspense","fallback","promise","all","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","MaxLength"],"mappings":"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","file":"static/js/main.5e53c2af.chunk.js","sourcesContent":["const ADD_NEW_MESSAGE_BODY = \"ADD_NEW_MESSAGE_BODY\";\r\nlet inititalState = {\r\n    dialogs: [\r\n        {id: 1, name: \"Maksim\"},\r\n        {id: 2, name: \"Maks\"},\r\n        {id: 3, name: \"Masha\"},\r\n        {id: 4, name: \"Yo\"},\r\n        {id: 5, name: \"Egor\"}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: \"Hi\"},\r\n        {id: 2, message: \"Hello\"},\r\n        {id: 3, message: \"How are you?\"},\r\n        {id: 4, message: \"What are you doing?\"},\r\n        {id: 5, message: \"How much is the fish?\"}\r\n\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = inititalState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_MESSAGE_BODY:\r\n            let newMessage = {\r\n                id: 7,\r\n                message: action.newMessageBody\r\n            };\r\n            return  {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const addNewMessageBodyActionCreator = (newMessageBody) => ({type: ADD_NEW_MESSAGE_BODY, newMessageBody});\r\n\r\nexport default dialogsReducer;\r\n","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormConrol = ({input, meta , child, ...props}) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={hasError ? styles.formController : \"\"}>\r\n            <div>\r\n                {props.children}\r\n\r\n            </div>\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta , child, ...restProps} = props;\r\n    return <FormConrol {...props}> <textarea {...input} {...restProps}/> </FormConrol>\r\n};\r\nexport const Input = (props) => {\r\n    const {input, meta , child, ...restProps} = props;\r\n    return <FormConrol {...props}> <input {...input} {...restProps}/> </FormConrol>\r\n};\r\nexport const createField = (placeholder, name, validators, component, props = {}, text=\"\") => {\r\n    return (\r\n        <div>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators} component={component}\r\n                   {...props}/>{text}\r\n        </div>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1n_fF\"};","module.exports = __webpack_public_path__ + \"static/media/images.904467c3.jfif\";","module.exports = __webpack_public_path__ + \"static/media/Pulse-1s-200px.cf5df366.svg\";","module.exports = __webpack_public_path__ + \"static/media/haha.0f81fe99.jpg\";","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as axios from \"axios\";\r\n\r\nconst instance =  axios.create({\r\n    withCredentials : true,\r\n    baseURL : (\"https://social-network.samuraijs.com/api/1.0/\"),\r\n    headers : {\r\n        \"API-KEY\":\"24afe4d5-e911-48f2-ab38-6aea088744f2\"\r\n    }\r\n});\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage,pageSize){\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n               return response.data;\r\n            });\r\n    },\r\n    setFollow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode;\r\n            })\r\n    },\r\n    setUnfollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => {\r\n                return response.data.resultCode;\r\n            })\r\n    }\r\n};\r\nexport const profileAPI = {\r\n    getUserProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response=> {\r\n                return response.data;\r\n            })\r\n    },\r\n    getStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status){\r\n        return instance.put(`profile/status`, {status : status})\r\n    },\r\n    savePhoto(file){\r\n        let formData = new FormData();\r\n        formData.append(\"image\" , file)\r\n        return instance.put(`profile/photo` , formData , {\r\n            headers : {\r\n                \"Content-type\" : \"multipart/form-data\"\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile){\r\n        return instance.put(`profile`, profile)\r\n    }\r\n};\r\nexport const loginAPI = {\r\n    me(){\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe=false , captcha=null){\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n};\r\nexport const securityAPI = {\r\n    getCaptchaUrl(){\r\n        return instance.get(`security/get-captcha-url`)\r\n    }\r\n};","import {profileAPI} from \"../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_STATUS = \"SET_STATUS\";\r\nconst ADD_POST = \"ADD_POST\";\r\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\r\nconst DELETE_POST = \"DELETE_POST\";\r\nconst SAVE_PHOTO = \"SAVE_PHOTO\";\r\n\r\nlet initialState = {\r\n    posts : [\r\n        // {id: 1 , message : \"Hi\" , likesCount : 12},\r\n        // {id: 2 , message : \"Hello\" , likesCount : 14},\r\n        // {id: 3 , message : \"It's my first post!\" , likesCount : 15},\r\n        // {id: 4 , message : \"What do you doing?\" , likesCount : 13},\r\n        {id: 5 , message : \"How much is the fish?\" , likesCount : 11}\r\n    ],\r\n    newPostText : \"heyhey\",\r\n    profile : null,\r\n    status : \"\"\r\n};\r\n\r\nconst  profileReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 7,\r\n                message: action.newPostBody,\r\n                likesCount: 0\r\n            };\r\n            return{\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: \"\"\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state, profile : action.profile\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state, status : action.status\r\n            }\r\n        }\r\n        case SAVE_PHOTO: {\r\n            return {\r\n                ...state, profile : {...state.profile, photos : action.photos}\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state, posts : state.posts.filter(p => p.id !== action.postId)\r\n            }\r\n        }\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport const  deletePost = (postId) => ({type : DELETE_POST, postId});\r\nexport const addPostActionCreator = (newPostBody) => ({type : ADD_POST, newPostBody});\r\nconst setUserProfileSuccess = (profile)=> ({type : SET_USER_PROFILE, profile});\r\nconst setStatus = (status) => ({type : SET_STATUS,status});\r\nconst savePhotoSuccess = (photos) => ({type : SAVE_PHOTO,photos});\r\n\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) =>{\r\n    let response = await profileAPI.getStatus(userId);\r\n            dispatch(setStatus(response.data));\r\n};\r\nexport const updateUserStatus = (status) => async (dispatch) =>{\r\n    try {\r\n        let response = await profileAPI.updateStatus(status);\r\n        if(response.data.resultCode === 0){\r\n            dispatch(setStatus(status));\r\n        }\r\n    }catch (error) {\r\n        debugger;\r\n    }\r\n    \r\n};\r\nexport const setUserProfile = (userId) => async (dispatch) => {\r\n    let profile = await profileAPI.getUserProfile(userId);\r\n            dispatch(setUserProfileSuccess(profile));\r\n};\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n    }\r\n};\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if(response.data.resultCode === 0){\r\n        dispatch(setUserProfile(userId));\r\n    }else{\r\n        dispatch(stopSubmit(\"edit-profile\", {_error :response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n};\r\nexport default profileReducer;\r\n\r\n","import React from \"react\"\r\nimport s from \"./Friends.module.css\"\r\nconst Friends = (props) => {\r\n    return <div className={s.friends}>\r\n        <img alt=\"\" src={props.src} />\r\n        </div>\r\n\r\n\r\n}\r\n\r\nexport default Friends","import Friends from \"../components/Navbar/Friends/Friends\";\r\nimport React from \"react\";\r\n\r\nlet initialState ={\r\n    friends : [\r\n        {id : 1 , src : \"https://cdn.iconscout.com/icon/premium/png-256-thumb/marvel-1502922-1273137.png\"},\r\n        {id : 1 , src : \"https://66.media.tumblr.com/2baea900172949be0a2c460cfe48fff8/tumblr_p9d3rzjswE1wmrvkdo7_250.png\"},\r\n        {id : 1 , src : \"https://66.media.tumblr.com/b6fdaeba44abe187c44e7b07fc896cbf/tumblr_p9d3rzjswE1wmrvkdo2_r1_250.png\"}\r\n    ]\r\n};\r\nconst FRIENDS_LIST = \"FRIENDS_LIST\";\r\nconst  sidebarReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case FRIENDS_LIST:\r\n            state.friends.map(f => <Friends src={f.src}/>);\r\n            return state;\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport const friendsListActionCreator = () => ({type : FRIENDS_LIST});\r\n\r\nexport default  sidebarReducer;","import {usersAPI} from \"../DAL/api\";\r\n\r\n\r\nconst FOLLOW = \"FOLLOW\";\r\nconst UNFOLLOW = \"UNFOLLOW\";\r\nconst SET_USERS = \"SET_USERS\";\r\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\r\nconst SET_USERS_TOTAL_COUNT = \"SET_USERS_TOTAL_COUNT\";\r\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\r\nconst TOGGLE_IS_FOLLOWING = \"TOGGLE_IS_FOLLOWING\";\r\n\r\nlet initialState = {\r\n    users : [],\r\n    pageSize : 5,\r\n    totalUsersCount : 0,\r\n    currentPage : 1,\r\n    isFetching : true,\r\n    followingInProgress : []\r\n};\r\n\r\nconst  usersReducer = (state = initialState,action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {...state,\r\n                users: state.users.map(user=>{\r\n                    if(user.id === action.userID){\r\n                        return {\r\n                            ...user, followed : true\r\n                    }\r\n                    }\r\n                    return user;\r\n                } )};\r\n\r\n        case UNFOLLOW:\r\n            return {...state,\r\n                    users: state.users.map(user=>{\r\n                        if(user.id === action.userID){\r\n                            return {\r\n                                ...user, followed : false\r\n                            }\r\n                        }\r\n                        return user;\r\n                    } )};\r\n        case SET_USERS:\r\n            return {...state, users : action.users};\r\n        case SET_CURRENT_PAGE:\r\n            return {...state, currentPage: action.currentPage};\r\n        case SET_USERS_TOTAL_COUNT:\r\n            return {...state, totalUsersCount: action.count};\r\n        case TOGGLE_IS_FETCHING:\r\n            return {...state, isFetching: action.isFetching};\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {...state, followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress , action.userId]\r\n                    : state.followingInProgress.filter(id=>id !== action.userId)};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\nconst followingProgress = (isFetching, userId) => ({type:TOGGLE_IS_FOLLOWING, isFetching, userId});\r\nconst followSuccess = (userID) => ({type : FOLLOW,  userID});\r\nconst unFollowSuccess = (userID) => ({type : UNFOLLOW, userID});\r\nconst setUsersSuccess = (users) => ({type : SET_USERS , users});\r\nconst setCurrentPageSuccess = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage});\r\nconst setUsersTotalCount = (totalUsersCount) => ({type: SET_USERS_TOTAL_COUNT, count : totalUsersCount});\r\nconst setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\r\nexport const follow = (userId) => async (dispatch) => {\r\n    dispatch(followingProgress(true, userId));\r\n    let response = await usersAPI.setFollow(userId);\r\n            if(response===0) {\r\n                dispatch(followSuccess(userId));\r\n            }\r\n            dispatch(followingProgress(false, userId));\r\n};\r\nexport const unFollow = (userId) => async (dispatch) => {\r\n    dispatch(followingProgress(true, userId));\r\n    let response = await usersAPI.setUnfollow(userId);\r\n            if(response===0) {\r\n                dispatch(unFollowSuccess(userId));\r\n            }\r\n            dispatch(followingProgress(false, userId));\r\n};\r\nexport const setUsers =(currentPage, pageSize)=> async (dispatch) => {\r\n    dispatch(setToggleIsFetching(true));\r\n    debugger;\r\n    let data = await usersAPI.getUsers(currentPage , pageSize);\r\n            dispatch(setToggleIsFetching(false));\r\n            dispatch(setCurrentPageSuccess(currentPage));\r\n            dispatch(setUsersSuccess(data.items));\r\n            dispatch(setUsersTotalCount(data.totalCount));\r\n};\r\nexport default usersReducer;\r\n\r\n","\r\nimport {loginAPI, securityAPI} from \"../DAL/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USERS_DATA = \"SET_USERS_DATA\";\r\nconst SET_CAPTCHA_URL = \"SET_CAPTCHA_URL\";\r\n\r\n\r\nlet initialState ={\r\n    isAuth: false,\r\n    id : null,\r\n    login : null,\r\n    email: null,\r\n    captchaURL : null\r\n};\r\nconst  authReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case SET_CAPTCHA_URL:\r\n        case SET_USERS_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            };\r\n\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport default  authReducer;\r\nconst setAuthUsersData = (id, email, login, isAuth) => ({type : SET_USERS_DATA,payload: { id ,email ,login, isAuth}});\r\nconst setCaptchaUrl = (captchaURL) => ({type : SET_CAPTCHA_URL , payload : {captchaURL}});\r\n\r\n\r\nexport const getAuthUsersData = () => async (dispatch) => {\r\n    let response = await loginAPI.me();\r\n            if(response.data.resultCode === 0){\r\n                let {id , email , login} = response.data.data;\r\n                dispatch(setAuthUsersData(id , email , login, true))\r\n            }\r\n};\r\nexport const login = (email, password, rememberMe , captcha) => async (dispatch) => {\r\n    let response = await loginAPI.login(email, password, rememberMe , captcha);\r\n            if(response.data.resultCode === 0){\r\n                dispatch(getAuthUsersData())\r\n\r\n            }else{\r\n                if(response.data.resultCode === 10){\r\n                    debugger;\r\n                    dispatch(getCaptchaURL());\r\n                }\r\n                let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"check the correctness of the entered data\"\r\n                dispatch(stopSubmit(\"Login\", {_error : errorMessage }));\r\n            }\r\n};\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await loginAPI.logout();\r\n            if(response.data.resultCode === 0){\r\n                dispatch(setAuthUsersData(null,null,null,false))\r\n            }\r\n};\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let response = await securityAPI.getCaptchaUrl();\r\n    let captchaURL = response.data.url;\r\n    dispatch(setCaptchaUrl(captchaURL));\r\n};","\r\nimport {getAuthUsersData} from \"./authReducer\";\r\n\r\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\r\n\r\nlet initialState ={\r\n    initialized : false\r\n};\r\nconst  appReducer = (state = initialState ,action) => {\r\n    switch (action.type) {\r\n        case SET_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            };\r\n        default :\r\n            return state;\r\n    }\r\n};\r\nexport default  appReducer;\r\nconst initializedSuccess = () => ({type : SET_INITIALIZED });\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUsersData());\r\n    Promise.all([promise]).then( ()=>{\r\n            dispatch(initializedSuccess());\r\n    });\r\n};\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport sidebarReducer from \"./sitebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./appReducer\";\r\nlet reducers = combineReducers({\r\n    dialogsPage :  dialogsReducer,\r\n    profilePage: profileReducer ,\r\n    sidebar : sidebarReducer,\r\n    usersPage : usersReducer,\r\n    auth : authReducer,\r\n    app : appReducer,\r\n    form : formReducer\r\n\r\n});\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)));\r\nwindow.__store__  = store;\r\nexport default store;","import React from 'react'\r\nimport s from \"./Navbar.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst Navbar = (props) => {\r\n    //Тут можно получить кастомых друзей\r\n\r\n\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/profile\">Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/dialogs\">Dialogs</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink activeClassName={s.active} to=\"/users\">Users</NavLink>\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import React from \"react\"\r\nimport userPhoto from \"../../assets/images/images.jfif\";\r\nimport s from \"./users.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nfunction Users(props) {\r\n    // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n        pages.push(i)\r\n    }\r\n    return (\r\n        <div>\r\n            <div>\r\n                {pages.map(p => {\r\n                    return <span className={props.currentPage === p && s.selectedPAge}\r\n                                 onClick={(e) => {\r\n                                     props.onPageChanged(p)\r\n                                 }}>{p}</span>\r\n                })}\r\n            </div>\r\n            {props.users.map(user => <div key={user.id}>\r\n                <span>\r\n                    <NavLink to={`profile/`+user.id}>\r\n                        <div>\r\n                            <img alt=\"logo\" src={user.photos.small != null ? user.photos.small : userPhoto} className={s.photo}/>\r\n                        </div>\r\n                    </NavLink>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => {\r\n                                props.unfollow(user.id)\r\n                            }}>Unfollow</button>\r\n                            : <button disabled={props.followingInProgress.some(id=>id===user.id)} onClick={() => {\r\n                                props.follow(user.id);\r\n                            }}>Follow</button>}\r\n                    </div>\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{\"user.location.city\"}</div>\r\n                        <div>{\"user.location.country\"}</div>\r\n                    </span>\r\n                </span>\r\n            </div>)}\r\n        </div>)\r\n}\r\n\r\nexport default Users;","import preloader from \"../../assets/images/Pulse-1s-200px.svg\";\r\nimport React from \"react\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div>\r\n        <img alt=\"\" src={preloader}/>\r\n    </div>\r\n}\r\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n};\r\nexport const getUsers = createSelector (getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u=>true);\r\n});\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n};\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n};\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n};\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n};\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n};","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setUsers, unFollow, follow\r\n} from \"../../Redux/usersReducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../preloader/preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount,\r\n    getUsers\r\n} from \"../../Redux/usersSelectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.setUsers(this.props.currentPage,this.props.pageSize);\r\n\r\n    };\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setUsers(pageNumber, this.props.pageSize);\r\n    };\r\n\r\n\r\n    render() {\r\n\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCOunt={this.props.totalUserCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   follow={this.props.follow}\r\n                   unfollow={this.props.unFollow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n// let authRedirectComponent = withAuthRedirect(UsersContainer);\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow, unFollow, setUsers\r\n    })\r\n)(UsersContainer);","import React , {useState, useEffect} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    console.log(props);\r\n    let [editMode , setEditMode] = useState( false);\r\n    let [status , setStatus] = useState(props.status);\r\n    useEffect( ()=>{\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    };\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    };\r\n\r\n\r\n    return (\r\n            <div>\r\n                <div>\r\n                    {!editMode &&\r\n                    <div>\r\n                        <span onDoubleClick={activateEditMode} >{props.status || `----`}  </span>\r\n                    </div>\r\n                    }\r\n                    {editMode &&\r\n                        <div>\r\n                            <input onChange={onStatusChange} autoFocus={true}\r\n                                   value={status} onBlur={deactivateEditMode}/>\r\n                        </div>\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n        )\r\n};\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\"\r\nimport {Contact} from \"./ProfileInfo\";\r\nimport {createField, Input ,Textarea} from \"../../FormControls/FormControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport style from \"../../FormControls/FormControls.module.css\"\r\n\r\n\r\n\r\nconst ProfileDataForm = ({handleSubmit,profile, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n\r\n            <div>\r\n                <b> Full Name </b>: {createField(\"Full name\",\"fullname\",[], Input)}\r\n            </div>\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <b> About me :</b>\r\n                {createField(\"About me\",\"aboutMe\",[], Textarea)}\r\n\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob : </b>\r\n                {createField(\"\",\"lookingForAJob\",[], Input, {type : \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <b> My Professional skills :</b>\r\n                {createField(\"My Professional skills\",\"lookingForAJobDescription\",[], Textarea)}\r\n            </div>\r\n            <div>\r\n                <b>Contacts :</b> {Object.keys(profile.contacts).map( key=>{\r\n                return <div key={key} className={s.contact}>\r\n                    <b>{key}</b> {createField(key,\"contacts.\" + key,[], Input)}\r\n                    {console.log(key)}\r\n                </div>\r\n            }) }\r\n            </div>\r\n            <div>\r\n                <button>save changes</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst ProfileDataReduxForm = reduxForm({form : \"edit-profile\"})(ProfileDataForm);\r\nexport default ProfileDataReduxForm;","import React , {useState} from 'react'\r\nimport s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport usePhoto from \"../../../assets/images/haha.jpg\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\n\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode , setEditMode] = useState( false);\r\n\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    };\r\n    const onMainPhotoSelected = (e) => {\r\n        if(e.target.files.length){\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    };\r\n    const onSubmit = (formData) => {\r\n         props.saveProfile(formData).then(\r\n             ()=>{\r\n                 setEditMode(false);\r\n             }\r\n         )\r\n    };\r\n        return(\r\n            <div>\r\n                <div className={s.descriptionBlock}>\r\n                    <div>\r\n                        <div>\r\n                            <img className={s.profilePhoto} alt=\"\" src={props.profile.photos.large || usePhoto}/>\r\n                        </div>\r\n                        <div className={s.changeAvatar}>\r\n                            {props.isOwner && <input onChange={onMainPhotoSelected} type=\"file\"/> }\r\n                            <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.profileInfo}>\r\n                        {editMode ? <ProfileDataForm initialValues={props.profile} onSubmit={onSubmit}\r\n                         profile={props.profile }/> : <ProfileData isOwner={props.isOwner}\r\n                         goToEditMode={ ()=> {setEditMode(true)}} profile={props.profile }/> }\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n}\r\nconst ProfileData = ({profile, goToEditMode , isOwner}) => {\r\n    return (\r\n        <div>\r\n            <div>\r\n                <b> Full Name :</b> {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b> About me :</b> {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>LookingForAJob : </b> {profile.lookingForAJob?\"Yes\":\"No\"}\r\n            </div>\r\n            {profile.lookingForAJob &&\r\n            <div>\r\n                <b> My Professional skills :</b> {profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>Contacts :</b> {Object.keys(profile.contacts).map( key=>{\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            }) }\r\n            </div>\r\n            {isOwner &&  <div>\r\n                <button onClick={goToEditMode}>edit</button>\r\n            </div> }\r\n        </div>\r\n    )\r\n};\r\n\r\nexport const Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle} :</b> {contactValue}\r\n    </div>\r\n};\r\nexport default ProfileInfo;\r\n","import React from 'react'\r\nimport s from \"./Post.module.css\"\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img alt=\"\" className={s.post_img} src=\"https://www.vhv.rs/dpng/d/403-4039766_circle-star-circle-star-icon-png-transparent-png.png\" />\r\n            { props.message }\r\n            <div>\r\n                <span><img className={s.like} src=\"https://cdn2.iconfinder.com/data/icons/facebook-ui-colored/48/JD-22-512.png\" alt=\"\"/>{ props.like }</span>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react'\r\nimport s from \"./MyPosts.module.css\"\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utillits/validators/validators\";\r\nimport {Textarea} from \"../../FormControls/FormControls\";\r\n\r\n\r\nlet maxLength10 = maxLengthCreator(50);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n    let postsElements = props.posts.map(p => <Post key={p.id } message={p.message} like={p.likesCount}/>);\r\n\r\n\r\n    let addPost = (values) => {\r\n        props.addPost(values.newPostBody);\r\n    };\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h2>My posts</h2>\r\n            <div>\r\n                <AddMessageReduxForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>)\r\n});\r\n\r\nconst AddMessageForm = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[required,maxLength10]} name=\"newPostBody\" placeholder=\"new Post\"/>\r\n            <button className={s.formBtn}>add Post</button>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm({form : \"addPostForm\"})(AddMessageForm);\r\nexport default MyPosts;","\r\nimport {addPostActionCreator} from \"../../../Redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n\r\nlet mapStateToProps = (state)=>{\r\n    return {\r\n        posts : state.profilePage.posts,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost : (newPostBody)=>{\r\n            dispatch(addPostActionCreator(newPostBody));\r\n        }\r\n    }\r\n};\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\nexport default MyPostsContainer;","import React from 'react'\r\nimport s from \"./Profile.module.css\"\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return(\r\n        <div className={s.mainProfile} >\r\n            <ProfileInfo saveProfile={props.saveProfile} isOwner={props.isOwner} savePhoto={props.savePhoto} status={props.status} updateUserStatus={props.updateUserStatus} profile={props.profile}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Profile;","import React from 'react'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserStatus, savePhoto, saveProfile, setUserProfile, updateUserStatus} from \"../../Redux/profileReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId){\r\n            userId = this.props.ownUserId;\r\n            if(!userId){\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        console.log(userId);\r\n        this.props.setUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if(this.props.match.params.userId != prevProps.match.params.userId){\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return <Profile {...this.props} profile={this.props.profile}\r\n                        isOwner={!this.props.match.params.userId}\r\n                        status={this.props.status} savePhoto={this.props.savePhoto}\r\n                        updateUserStatus={this.props.updateUserStatus}/>\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile : state.profilePage.profile,\r\n    status : state.profilePage.status,\r\n    ownUserId : state.auth.id,\r\n    isAuth : state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps , {setUserProfile , saveProfile, getUserStatus, updateUserStatus, savePhoto }),\r\n    withRouter\r\n)(ProfileContainer) ;"," import React from 'react'\r\nimport s from \"./Header.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Button} from \"@material-ui/core/\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n    <header className={s.header}>\r\n        <div className={s.left}>\r\n            <h5>SPACE Social Network</h5>\r\n        </div>\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ?\r\n                <div className={props.isAuth ? s.logout : s.login}>{props.login} - <Button variant=\"outlined\" color=\"primary\" href=\"#outlined-buttons\" onClick={props.logout}>Log out</Button> </div>\r\n                : <NavLink to={'/login'}><Button variant=\"outlined\" color=\"primary\">Login</Button></NavLink> }\r\n        </div>\r\n\r\n    </header>)\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuthUsersData, logout} from \"../../Redux/authReducer\";\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n       this.props.getAuthUsersData();\r\n    }\r\n    render() {\r\n\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n    isAuth : state.auth.isAuth,\r\n    login : state.auth.login\r\n\r\n});\r\nexport default connect(mapStateToProps , {logout,getAuthUsersData\r\n})(HeaderContainer);","import React from \"react\"\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../FormControls/FormControls\";\r\nimport {required} from \"../../utillits/validators/validators\";\r\nimport styles from \"../FormControls/FormControls.module.css\"\r\n\r\nconst FormLogin = (props) => {\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={`email`} placeholder={\"Email\"} type={\"text\"} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={`password`} placeholder={\"Password\"} type={\"password\"} component={Input} validate={[required]}/>\r\n            </div>\r\n            <div>\r\n                <Field name={`rememberMe`} type={\"checkbox\"} component={Input}/>Remember me\r\n                {props.captchaURL && <img src={props.captchaURL}/>}\r\n                {props.captchaURL && createField(\"symbols from image\", \"captcha\", [required], Input, {})}\r\n                {props.error&&<div className={styles.formSummaryError}>\r\n                    {props.error}\r\n                </div>}\r\n\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nexport const LoginReduxForm = reduxForm({form : \"Login\"})(FormLogin);","import React from \"react\"\r\nimport  {LoginReduxForm} from \"./FormLogin\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../Redux/authReducer\";\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email,formData.password,formData.rememberMe,formData.captcha);\r\n\r\n    };\r\n    if(props.isAuth){\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return(\r\n\r\n        <div>\r\n            <h1>LOGIN</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaURL={props.captchaURL} />\r\n        </div>\r\n    )\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    isAuth : state.auth.isAuth,\r\n    captchaURL: state.auth.captchaURL\r\n});\r\nexport default  connect(mapStateToProps, {login} )(Login);","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\n\r\nimport Login from \"./Login\";\r\nimport {login} from \"../../Redux/authReducer\";\r\n\r\nconst LoginContainer  = (props)=>{\r\n\r\n        return <Login login={props.login}/>;\r\n};\r\nlet mapStateToProps = (state)=>({\r\n    login : state.auth.login\r\n});\r\nexport default connect(mapStateToProps,{login})(LoginContainer);\r\n\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {Redirect, Route, Switch} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginContainer from \"./components/Login/LoginContainer\";\r\nimport {connect} from \"react-redux\";\r\nimport {initializeApp} from \"./Redux/appReducer\";\r\nimport Preloader from \"./components/preloader/preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(()=> import(`./components/Dialogs/DialogsContainer`));\r\nclass App extends React.Component {\r\n    catchAllUnhandledError(promiseRejectionEvent){\r\n        alert(\"some error catch\");\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.initializeApp();\r\n        window.addEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledError);\r\n    }\r\n\r\n    render() {\r\n        if(!this.props.initialized){\r\n            return <Preloader/>\r\n        }\r\n        return (\r\n            <div className=\"app-wrapper\">\r\n                <HeaderContainer/>\r\n                <Navbar state={this.props.state}\r\n                        dispatch={this.props.dispatch}/>\r\n\r\n                <div className=\"app-wrapper-content\">\r\n                    <Switch>\r\n                    <Route exact path=\"/\"\r\n                               render={() => <Redirect to={\"/profile\"}/>}/>\r\n                    <Route path=\"/dialogs\"\r\n                           render={withSuspense(DialogsContainer) }/>\r\n                    <Route path=\"/profile/:userId?\"\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path=\"/users\"\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path=\"/login\"\r\n                           render={() => <LoginContainer/>}/>\r\n                    <Route path=\"*\"\r\n                           render={() => <div>404 NOT FOUND</div>}/>\r\n                    </Switch>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    initialized : state.app.initialized\r\n});\r\n\r\nexport default connect(mapStateToProps , {initializeApp })(App);\r\n","import React from \"react\";\r\nimport Preloader from \"../components/preloader/preloader\";\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) =>{\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props} />\r\n        </React.Suspense>\r\n    }\r\n};","import * as serviceWorker from './serviceWorker';\r\nimport store from \"./Redux/redux-store\"\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport 'typeface-roboto';\r\n\r\nReactDOM.render(\r\n\r\n    <HashRouter>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </HashRouter>\r\n       , document.getElementById('root'));\r\n\r\n\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1r69B\",\"profilePhoto\":\"ProfileInfo_profilePhoto__Y3yjw\",\"profileInfo\":\"ProfileInfo_profileInfo__CI6gL\",\"contact\":\"ProfileInfo_contact__2I1l5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__10lsR\",\"item\":\"Navbar_item__3xH-R\",\"active\":\"Navbar_active__2iq8d\"};","export const required = value =>{\r\n    if(value)return undefined;\r\n    return \"Field is required\";\r\n};\r\nexport const maxLengthCreator = (MaxLength) => (value)=>{\r\n    if(value.length>MaxLength) return `max length is ${MaxLength} symbols`;\r\n    return undefined;\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formController\":\"FormControls_formController__2nejx\",\"formSummaryError\":\"FormControls_formSummaryError__1EQe4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1PU1-\",\"ownerName\":\"Header_ownerName__QvTXR\",\"logout\":\"Header_logout__38R4Q\",\"loginBlock\":\"Header_loginBlock__RpTea\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3H1jN\",\"posts\":\"MyPosts_posts__rGfw3\",\"formBtn\":\"MyPosts_formBtn__3G5KS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__26OKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"users_photo__AIauk\",\"selectedPAge\":\"users_selectedPAge__EfTYy\"};"],"sourceRoot":""}